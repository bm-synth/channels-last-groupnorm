name: Linting and unit testing of the code

on:
  workflow_call:
    inputs:
      aws-account-id:
        description: "AWS Account ID"
        default: "812634467557"
        type: string
      arn-role:
        description: "ARN of the AWS role"
        required: true
        type: string
      aws-region:
        description: "Region of the AWS"
        default: "eu-west-1"
        type: string
      codeartifact-domain:
        description: "AWS CodeArtifact domain to log in to."
        default: "synthesia-rnd"
        type: string
      codeartifact-repository:
        description: "AWS CodeArtifact repository to log in to."
        default: "synth-pypi"
        type: string
      generate-pytest-coverage:
        description: "Whether to also generate pytest coverage analysis"
        default: "true"
        type: string
      python-version:
        description: "Version of Python to be used. Overwrites the container's Python version."
        # Set this to 3.7, 3.8, 3.9, etc. if you want to use a different Python version than the one in the container
        default: ""
        type: string
      requirements-file:
        description: "Type of requirements file to install dependencies from. Currently supports `uv.lock`, `requirements.txt`-like file and `setup.py`"
        default: "uv.lock"
        type: string
      package-manager:
        description: "Package manager to use for installing dependencies. Currently supports `pip`, `uv`, and `poetry`"
        default: "uv-sync"
        type: string
    secrets:
      GHA_RNDUVPC_DEPLOY_KEY:
        required: true

jobs:
  python-lint-and-test:
    runs-on: [self-hosted, research-gpu]
    container:
      # You can put your own team's base image here
      image: http://812634467557.dkr.ecr.eu-west-1.amazonaws.com/synthesia-cudnn-python:12.4.1-cudnn-devel-ubuntu22.04-py311-latest

    steps:
      - name: Run python-lint-and-test action
        uses: Synthesia-Technologies/gha-workflows/actions/rnd/python-lint-and-test@main
        with:
          aws-account-id: ${{ inputs.aws-account-id }}
          arn-role: ${{ inputs.arn-role }}
          aws-region: ${{ inputs.aws-region }}
          checkout-deploy-key: ${{ secrets.GHA_RNDUVPC_DEPLOY_KEY }}
          codeartifact-domain: ${{ inputs.codeartifact-domain }}
          codeartifact-repository: ${{ inputs.codeartifact-repository }}
          generate-pytest-coverage: ${{ inputs.generate-pytest-coverage == 'false' && 'false' || 'true' }}
          python-version: ${{ inputs.python-version }}
          requirements-file: ${{ inputs.requirements-file }}
          use-cache: "true"
          package-manager: ${{ inputs.package-manager }}
